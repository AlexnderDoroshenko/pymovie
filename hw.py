#python3.8
# training skills on real tasks/ https://www.upwork.com/jobs/~010d8f27ca276a9731
"""As you can see from test.mp4, it has one line "Hello world!" with black font. Your job is to add the second line "Hi there" in the second line with blue font, same white background, same font, same size.

The python code to generate this test.mp4 is in hw.py (stands for "helloworld.py").

What you could do is to develop your python script yourhw.py, but only send me your test2.mp4 which was generated by yourhw.py and shows "Hello world!" in black and "Hi there" in blue.

Then I will hire you. Once you send me yourhw.py, I will pay you."""
from moviepy.editor import *
import os

dirout = 'C:/langs/out/'
mobile_size = (640, 400)
Font = 'Microsoft-JhengHei-Bold-&-Microsoft-JhengHei-UI-Bold'


def one_by_one():
    ''' main function '''
    text_list = ["Hello world!", "Rock the world!", "Gonzo", "Fozzie"]
    clip_list = []

    for text in text_list:
        try:
            if text == "Rock the world!":
                txt_clip = TextClip(text, fontsize=50, color='blue', bg_color='white',
                                       size=mobile_size).set_duration(5)
                clip_list.append(txt_clip)
                txt_clip.set_position('center', 'top')
            else:
                txt_clip = TextClip(text, fontsize=50, color='black', bg_color='white',
                                       size=mobile_size).set_duration(5)
                txt_clip.set_position('center', 'bottom')
                clip_list.append(txt_clip)
        except UnicodeEncodeError:
            txt_clip = TextClip("Issue with text", fontsize=70, color='white').set_duration(2)
            clip_list.append(txt_clip)

    final_clip = concatenate(clip_list, method="compose")
    final_clip.write_videofile(dirout + "my_concatenation.mp4", fps=24, codec='mpeg4')

    video = VideoFileClip(dirout + 'test.mp4', target_resolution=(640, 400)).subclip(4, 4)

    # Make the text. Many more options are available.

    txt_clip1 = (TextClip("Hi there", fontsize=50, color='blue', bg_color='white')
                 .set_position('bottom')
                 .set_duration(5))

    result = CompositeVideoClip([video, txt_clip1], use_bgclip=True)  # Overlay text on video
    result.write_videofile(dirout + "test2.mp4", fps=1)  # Many options...z


def add_new_line():
    # define already exist video file
    video = VideoFileClip(dirout + 'test.mp4')

    # Make the text. Many more options are available.
    txt_clip1 = (TextClip("Hi there", fontsize=50, color='blue', bg_color='white')
                 .set_position('bottom')
                 .set_duration(5))
    # Make the second line in the clip
    result = CompositeVideoClip([video, txt_clip1], use_bgclip=True)  # Overlay text on video
    # Creates new video file
    result.write_videofile(dirout + "test2.mp4", fps=1)  # Many options...


def main():
    intro_duration = 5
    intro_text = TextClip("Hello world!", fontsize=50, color='black', bg_color='white', size=mobile_size)
    intro_text = intro_text.set_duration(intro_duration)
    intro_text = intro_text.set_pos("center")
    intro_text.write_videofile(dirout + 'test.mp4', fps=1)
    add_new_line()


if __name__ == '__main__':
    try:
        if os.getenv('FFMPEG_BINARY') is None:
            os.environ['FFMPEG_BINARY'] = r'C:\Program Files\ImageMagick-7.0.10-Q16-HDRI\ffmpeg.exe'
        if os.getenv('IMAGEMAGICK_BINARY') is None:
            os.environ['IMAGEMAGICK_BINARY'] = r'C:\Program Files\ImageMagick-7.0.10-Q16-HDRI\convert.exe'
        if not os.path.isdir(dirout):
            os.makedirs(dirout)
        main()
    except Exception as e:
        print(e)
